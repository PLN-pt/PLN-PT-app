
use warnings;
use strict;

use Path::Tiny;
use Data::Dumper;

my $file = shift;

my $md;
if ($file) {
  $md = path($file)->slurp_utf8;
}
else {
  my $source = 'https://raw.githubusercontent.com/nunorc/nlp-pt-resources/master/README.md';
  $md = `curl -s $source`;
}
exit unless $md;

print "<h1 class='myt'>Resources</h1>\n";

my @blocks = split /\n\n+/, $md;
my $topic = undef;

foreach my $b (@blocks) {
  if ($topic) {
    _proc_list($b);
    $topic = undef;
    next;
  }

  if ($b =~ m/^##/) {
    _proc_topic($b);
    $topic = 1;
    next;
  }
}

_end();

sub _proc_topic {
  my ($title) = @_;
  $title =~ s/[#\s]+//;

print<<"EOH";
<ul class="collection with-header">
  <li class="collection-header blue-grey white-text"><h5>$title</h5></li>
EOH
}

sub _proc_list {
  my ($b) = @_;
  my $first = 1;

 $b =~ s/\n+/ /g;
  
  my @list = split /(\*\s+\[.*?\]\(.*?\):?)/, $b;
  for (@list) {
   next unless $_;
   if ($_ =~ /\*\s+\[(.*?)\]\((.*?)\):?/) {
      print "<li class='collection-item'>\n<span class='title'><h6><a href='$2' class='orange-text'>$1</a></h6><span>\n";
   }
   else {
     my $t = $_; $t =~ s/^\s+//; $t =~ s/\s+$//;
     print "<p class='light'>", ucfirst($t), "</p></li>\n";
   }
  }
  print "</ul>\n";
}

sub _end {
  print "<br><p class='light mybq'>This list is generated from the <a href='https://github.com/nunorc/nlp-pt-resources' class='orange-text'>nlp-pt-resources</a> repository, for updates or adding items please open a issue or submit a pull request.</p>";
}
